@model SAT.DATA.EF.ScheduledClass

@{
    ViewBag.Title = "Add New Scheduled Class";
}

<h2>@ViewBag.Title</h2>

<div id="formOutline">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>ScheduledClass</h4>
                <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <!-- change default text here (string) -->
                @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InstructorName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InstructorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InstructorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- //! default to "pending" in Controller -->
            @*<div class="form-group">
                    @Html.LabelFor(model => model.SCSID, "SCSID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SCSID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SCSID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="clear"></div>

            <div id="studentFooterLeft">
                @* change values on buttons and hyperlinks to personalize *@
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
            </div>

            <div id="studentFooterRight">
                <input type="submit" value="Add Scheduled Class" class="btn btn-primary" />
            </div>
            <div class="clear"></div>

            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>*@
        </div>
    }
</div>

@* remember to include a section Scripts for validation *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <!-- use jQuery datepicker for date fields -->
    <script>
        //.NET gives the control an ID that is equal to the property that it represents. You can
        //comma separate these in the call (ex. below)
        $(function () {
            $("#StartDate,#EndDate").datepicker();
        });
    </script>
}
